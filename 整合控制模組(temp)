Sub 插入測試項目_1_2_6_Alex()
    ' 定義變數
    ' 1. 定義變數
    Dim xlApp As Object
    Dim xlWorkbook As Object
    Dim xlWorksheet As Object
    Dim wdApp As Object
    Dim wdDoc As Object
    Dim rng As Range
    Dim i As Long
    Dim rowCount As Long

    ' 2. 讓使用者自行選擇Excel文件
    Set xlApp = CreateObject("Excel.Application")
    xlApp.Visible = False ' 確保Excel文件不會顯示出來
    Dim filePath As Variant
    filePath = Application.GetOpenFilename("Excel Files (*.xlsx), *.xlsx", , "選擇Excel文件")

    If VarType(filePath) = vbBoolean And filePath = False Then
        MsgBox "未選擇任何文件"
        Exit Sub
    End If

    ' 3. 確保 filePath 是字符串類型
    Set xlWorkbook = xlApp.Workbooks.Open(CStr(filePath))
    Set xlWorksheet = xlWorkbook.Sheets(1)

    ' 4. 打開Word應用程序並創建新文檔
    Set wdApp = CreateObject("Word.Application")
    wdApp.Visible = True
    Set wdDoc = wdApp.Documents.Add
    
    ' 4.1 設置頁面方向為橫向
    wdDoc.PageSetup.Orientation = wdOrientLandscape
    
    ' 4.2 設置頁面大小為A3
    wdDoc.PageSetup.PaperSize = wdPaperA3

    ' 5. 獲取第6列的表頭及其後的行數
    rowCount = xlWorksheet.Cells(xlWorksheet.Rows.Count, 1).End(-4162).Row ' xlUp = -4162

    ' 調試信息
    Debug.Print "文件路徑: " & filePath

    ' 6. 循環插入表頭和每行數據
    For i = 7 To rowCount
        ' 6.1 將選擇範圍移動到文檔末尾
        On Error Resume Next
        wdApp.Selection.Collapse Direction:=wdCollapseEnd
        If Err.Number <> 0 Then
            Debug.Print "選擇文檔末尾時發生錯誤: " & Err.Description
            MsgBox "選擇文檔末尾時發生錯誤: " & Err.Description
            Exit Sub
        End If
        On Error GoTo 0

        ' 6.2 複製表頭 (第6列)
        Set rng = xlWorksheet.Range("A6:F6")
        rng.Copy

        ' 6.3 插入Word文檔
        wdApp.Selection.PasteExcelTable False, False, False

        ' 6.5 複製第i行
        Set rng = xlWorksheet.Range("A" & i & ":F" & i)
        rng.Copy

        ' 6.6 插入Word文檔
        wdApp.Selection.PasteExcelTable False, False, False

        ' 6.7 插入空行以分隔
        wdApp.Selection.TypeParagraph
    Next i

    ' 7. 清理
    xlWorkbook.Close False
    xlApp.Quit
    Set xlApp = Nothing
    Set xlWorkbook = Nothing
    Set xlWorksheet = Nothing
    Set wdDoc = Nothing
    Set wdApp = Nothing
    Set rng = Nothing

    Debug.Print "完成插入操作"
End Sub

Sub 插入對應資料夾的圖片_1_0_6_Copilot()
    ' 1. 定義變數
    Dim folderPaths As Collection
    Dim folderName As String
    Dim wordDocPath As String
    Dim wordApp As Object
    Dim worddoc As Object
    Dim wordRange As Object
    Dim shapeRange As Object
    Dim file As String
    Dim insertedImageCount As Integer
    Dim imgList() As String
    Dim fileDict As Object
    Dim tempFile As Variant
    Dim tbl As Object
    Dim rng As Object
    Dim cellValue As String
    Dim i As Integer, j As Integer

    insertedImageCount = 0
    Set folderPaths = New Collection
    Set fileDict = CreateObject("Scripting.Dictionary")

    Debug.Print "程序開始"

    ' 2. 讓使用者選取 Word 檔案
    With Application.fileDialog(msoFileDialogFilePicker)
        .Title = "選取 Word 檔案"
        .Filters.Clear
        .Filters.Add "Word Files", "*.docx; *.doc"
        If .Show = -1 Then
            wordDocPath = .selectedItems(1)
        Else
            MsgBox "您未選取任何 Word 檔案。"
            Debug.Print "未選取任何 Word 檔案，程序退出"
            Exit Sub
        End If
    End With

    ' 3. 讓使用者選取多個資料夾
    Dim objShell As Object
    Dim objFolder As Object
    Set objShell = CreateObject("Shell.Application")
    Set objFolder = objShell.BrowseForFolder(0, "選取資料夾 (按住Ctrl鍵以多選)", &H20, 0)

    If Not objFolder Is Nothing Then
        Dim selectedItems As Object
        Set selectedItems = objFolder.Items

        For Each selectedItem In selectedItems
            If selectedItem.IsFolder Then
                folderPaths.Add selectedItem.Path
                Debug.Print "選取資料夾：" & selectedItem.Path
            End If
        Next selectedItem

        If folderPaths.Count = 0 Then
            MsgBox "您未選取任何資料夾。"
            Debug.Print "未選取任何資料夾，程序退出"
            Exit Sub
        End If
    Else
        MsgBox "您未選取任何資料夾。"
        Debug.Print "未選取任何資料夾，程序退出"
        Exit Sub
    End If

    ' 4. 打開 Word 應用程式和文件
    On Error Resume Next
    Set wordApp = CreateObject("Word.Application")
    Set worddoc = wordApp.Documents.Open(wordDocPath)
    On Error GoTo 0

    If worddoc Is Nothing Then
        MsgBox "無法打開 Word 文件。"
        Debug.Print "無法打開 Word 文件，程序退出"
        Exit Sub
    End If

    wordApp.Visible = True
    Debug.Print "Word 檔案已打開"

    ' 5. 抓取 Word 檔內每個表格第一欄第二列的數字，並插入對應資料夾內的圖片
    For Each tbl In worddoc.Tables
        cellValue = tbl.cell(2, 1).Range.Text
        cellValue = Left(cellValue, Len(cellValue) - 2) ' 去掉多餘的行尾字符
        Debug.Print "處理表格，找到數字：" & cellValue
        
        For Each folderPath In folderPaths
            folderName = Mid(folderPath, InStrRev(folderPath, "\") + 1)
            If cellValue = folderName Then
                Debug.Print "找到匹配的資料夾：" & folderName
                file = Dir(folderPath & "\*.*")
                Do While file <> ""
                    If LCase(Right(file, 4)) = ".jpg" Or LCase(Right(file, 4)) = ".png" Or LCase(Right(file, 4)) = ".gif" Then
                        ' 插入一行以插入圖片到表格外
                        Set rng = tbl.Range.Paragraphs.last.Range
                        rng.Collapse Direction:=wdCollapseEnd
                        rng.InsertParagraphAfter
                        Set rng = rng.Paragraphs.last.Range
                        rng.InlineShapes.AddPicture Filename:=folderPath & "\" & file, LinkToFile:=False, SaveWithDocument:=True
                        insertedImageCount = insertedImageCount + 1
                        Debug.Print "插入圖片：" & folderPath & "\" & file
                    End If
                    file = Dir
                Loop
            End If
        Next folderPath
    Next tbl

    ' 6. 顯示結果，不再自動保存並關閉 Word
    If insertedImageCount > 0 Then
        MsgBox "圖片插入完成，總共插入了 " & insertedImageCount & " 張圖片。"
        Debug.Print "圖片插入完成，總共插入了 " & insertedImageCount & " 張圖片"
    Else
        MsgBox "未找到任何符合條件的位置可插入圖片。"
        Debug.Print "未找到任何符合條件的位置可插入圖片"
    End If

    Debug.Print "程序結束"
End Sub

Sub 調整圖片尺寸比率_1_6_2_Alex()
    ' 版本：1.6.2
    ' 功能：選擇Word檔案並批次調整所有圖片尺寸比率
    ' 日期：2025-03-14
    
    ' 1. 定義變數
    Dim wordApp As Object
    Dim doc As Object
    Dim shp As Object
    Dim dlgOpen As fileDialog
    Dim filePath As String
    Dim scaleFactor As Single
    Dim picCount As Integer
    Debug.Print "變數已定義" ' 行5

    ' 2. 建立 Word 應用程序
    On Error Resume Next
    Set wordApp = GetObject(Class:="Word.Application")
    If Err.Number <> 0 Then
        Set wordApp = CreateObject(Class:="Word.Application")
    End If
    If wordApp Is Nothing Then
        MsgBox "無法啟動 Word 應用程序。", vbCritical, "錯誤"
        Exit Sub
    End If
    On Error GoTo 0
    wordApp.Visible = True
    Debug.Print "Word 應用程序已建立並顯示" ' 行15

    ' 3. 請求使用者選擇一個 Word 檔
    Set dlgOpen = Application.fileDialog(msoFileDialogFilePicker)
    dlgOpen.Title = "選擇 Word 檔"
    dlgOpen.Filters.Clear
    dlgOpen.Filters.Add "Word 檔", "*.docx; *.docm", 1
    If dlgOpen.Show <> -1 Then Exit Sub
    filePath = dlgOpen.selectedItems(1)
    Debug.Print "使用者已選擇 Word 檔" ' 行25

    ' 4. 開啟選定的 Word 檔
    On Error Resume Next
    Set doc = wordApp.Documents.Open(filePath)
    If Err.Number <> 0 Then
        MsgBox "無法開啟選定的 Word 檔。", vbCritical, "錯誤"
        Exit Sub
    End If
    On Error GoTo 0
    Debug.Print "Word 檔已開啟" ' 行35

    ' 5. 跳出訊息框讓使用者選擇圖片尺寸的縮放比例
    scaleFactor = Val(InputBox("請輸入圖片縮放比例 (例如: 0.5 表示縮小 50%)", "圖片縮放比例", "1"))
    If Not IsNumeric(scaleFactor) Or scaleFactor <= 0 Then
        MsgBox "無效的縮放比例。", vbCritical, "錯誤"
        Exit Sub
    End If
    Debug.Print "使用者選擇的縮放比例: " & scaleFactor ' 行45

    picCount = 0
    ' 6. 遍歷所有 InlineShapes 並調整尺寸
    For Each shp In doc.InlineShapes
        On Error Resume Next
        shp.ScaleHeight = shp.ScaleHeight * scaleFactor
        shp.ScaleWidth = shp.ScaleWidth * scaleFactor
        If Err.Number = 0 Then
            picCount = picCount + 1
        End If
        Err.Clear
        Debug.Print "調整 InlineShape 圖片尺寸比率: 高度=" & shp.ScaleHeight & ", 寬度=" & shp.ScaleWidth ' 行50
    Next shp
    
    ' 7. 遍歷所有 Shapes 並調整尺寸
    For Each shp In doc.Shapes
        On Error Resume Next
        shp.ScaleHeight = shp.ScaleHeight * scaleFactor
        shp.ScaleWidth = shp.ScaleWidth * scaleFactor
        If Err.Number = 0 Then
            picCount = picCount + 1
        End If
        Err.Clear
        Debug.Print "調整 Shape 圖片尺寸比率: 高度=" & shp.ScaleHeight & ", 寬度=" & shp.ScaleWidth ' 行55
    Next shp

    ' 8. 完成提示
    If picCount > 0 Then
        MsgBox "已完成調整 " & picCount & " 個圖片的尺寸！", vbInformation
    Else
        MsgBox "未找到可調整的圖片！", vbExclamation
    End If
    Debug.Print "調整完成提示已顯示" ' 行60

    ' 9. 清理對象
    Set shp = Nothing
    Set doc = Nothing
    Set wordApp = Nothing
    Set dlgOpen = Nothing
End Sub

Sub 版面調整_1_1_0_Copilot()
    ' 版本：1.1.0
    ' 功能：偵測圖片後的2列6欄表格並將其整體移動至下一頁，包含表格後的所有內容
    ' 日期：2025-03-14
    
    ' 1. 定義變數
    Dim wordApp As Object
    Dim doc As Object
    Dim tbl As Object
    Dim shp As Object
    Dim dlgOpen As Object
    Dim filePath As String
    Dim rng As Object
    Dim moveRange As Object
    Debug.Print "變數已定義" ' 行5

    ' 2. 建立 Word 應用程序
    On Error Resume Next
    Set wordApp = GetObject(Class:="Word.Application")
    If Err.Number <> 0 Then
        Set wordApp = CreateObject(Class:="Word.Application")
    End If
    If wordApp Is Nothing Then
        MsgBox "無法啟動 Word 應用程序。", vbCritical, "錯誤"
        Exit Sub
    End If
    On Error GoTo 0
    wordApp.Visible = True
    Debug.Print "Word 應用程序已建立並顯示" ' 行15

    ' 3. 請求使用者選擇一個 Word 檔
    Set dlgOpen = Application.fileDialog(msoFileDialogFilePicker)
    dlgOpen.Title = "選擇 Word 檔"
    dlgOpen.Filters.Clear
    dlgOpen.Filters.Add "Word 檔", "*.docx; *.docm", 1
    If dlgOpen.Show <> -1 Then Exit Sub
    filePath = dlgOpen.selectedItems(1)
    Debug.Print "使用者已選擇 Word 檔" ' 行25

    ' 4. 開啟選定的 Word 檔
    On Error Resume Next
    Set doc = wordApp.Documents.Open(filePath)
    If Err.Number <> 0 Then
        MsgBox "無法開啟選定的 Word 檔。", vbCritical, "錯誤"
        Exit Sub
    End If
    On Error GoTo 0
    Debug.Print "Word 檔已開啟" ' 行35

    ' 5. 遍歷所有圖片並檢查後面是否有2列6欄的表格且在同一頁
    For Each shp In doc.InlineShapes
        Set rng = shp.Range.Next(Unit:=wdCharacter, Count:=1)
        
        ' 確保 rng 被正確設置
        Do While Not rng Is Nothing And rng.Tables.Count = 0
            Set rng = rng.Next(Unit:=wdCharacter, Count:=1)
            If rng Is Nothing Then Exit Do
        Loop

        If Not rng Is Nothing Then
            If rng.Tables.Count > 0 Then
                Set tbl = rng.Tables(1)
                If tbl.Rows.Count = 2 And tbl.Columns.Count = 6 Then
                    If shp.Range.Information(wdActiveEndPageNumber) = tbl.Range.Information(wdActiveEndPageNumber) Then
                        ' 6. 移動2列6欄的表格和其後的所有內容到下一頁
                        Set moveRange = doc.Range(Start:=tbl.Range.Start, End:=doc.Content.End)
                        moveRange.Cut
                        doc.Range(doc.Content.End - 1).InsertBreak Type:=wdPageBreak
                        doc.Range(doc.Content.End - 1).Paste
                        Debug.Print "圖片後的2列6欄表格和其後的內容已移到下一頁" ' 行45
                    End If
                End If
            End If
        End If
    Next shp
    
    ' 7. 完成提示
    MsgBox "檢查並移動表格已完成！", vbInformation
    Debug.Print "檢查並移動表格已完成" ' 行50

    ' 8. 清理對象
    Set tbl = Nothing
    Set doc = Nothing
    Set wordApp = Nothing
    Set dlgOpen = Nothing
    Set rng = Nothing
    Set moveRange = Nothing
End Sub
